// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package deployment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the deployment request
type DeployRequest struct {
	DeployType           string   `protobuf:"bytes,1,opt,name=deployType,proto3" json:"deployType,omitempty"`
	Flavor               string   `protobuf:"bytes,2,opt,name=flavor,proto3" json:"flavor,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployRequest) Reset()         { *m = DeployRequest{} }
func (m *DeployRequest) String() string { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()    {}
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{0}
}

func (m *DeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRequest.Unmarshal(m, b)
}
func (m *DeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRequest.Marshal(b, m, deterministic)
}
func (m *DeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRequest.Merge(m, src)
}
func (m *DeployRequest) XXX_Size() int {
	return xxx_messageInfo_DeployRequest.Size(m)
}
func (m *DeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRequest proto.InternalMessageInfo

func (m *DeployRequest) GetDeployType() string {
	if m != nil {
		return m.DeployType
	}
	return ""
}

func (m *DeployRequest) GetFlavor() string {
	if m != nil {
		return m.Flavor
	}
	return ""
}

func (m *DeployRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

// The response message containing the deployment status
type DeployResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployResponse) Reset()         { *m = DeployResponse{} }
func (m *DeployResponse) String() string { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()    {}
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{1}
}

func (m *DeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployResponse.Unmarshal(m, b)
}
func (m *DeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployResponse.Marshal(b, m, deterministic)
}
func (m *DeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployResponse.Merge(m, src)
}
func (m *DeployResponse) XXX_Size() int {
	return xxx_messageInfo_DeployResponse.Size(m)
}
func (m *DeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployResponse proto.InternalMessageInfo

func (m *DeployResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*DeployRequest)(nil), "deployment.DeployRequest")
	proto.RegisterType((*DeployResponse)(nil), "deployment.DeployResponse")
}

func init() { proto.RegisterFile("deployment.proto", fileDescriptor_fac0ec10f8e4d7ff) }

var fileDescriptor_fac0ec10f8e4d7ff = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x49, 0x2d, 0xc8,
	0xc9, 0xaf, 0xcc, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xc5, 0x73, 0xf1, 0xba, 0x80, 0x79, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x72,
	0x5c, 0x50, 0xe9, 0x90, 0xca, 0x82, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x24, 0x11,
	0x21, 0x31, 0x2e, 0xb6, 0xb4, 0x9c, 0xc4, 0xb2, 0xfc, 0x22, 0x09, 0x26, 0xb0, 0x1c, 0x94, 0x07,
	0x12, 0x2f, 0x49, 0x2c, 0x4a, 0x4f, 0x2d, 0x91, 0x60, 0x86, 0x88, 0x43, 0x78, 0x4a, 0x1a, 0x5c,
	0x7c, 0x30, 0x0b, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0xc1, 0x26, 0x14, 0x97, 0x24, 0x96, 0x94, 0x16,
	0x43, 0x4d, 0x87, 0xf2, 0x8c, 0x7c, 0xb9, 0x38, 0x20, 0x2a, 0x53, 0x8b, 0x84, 0x1c, 0xb9, 0xd8,
	0x20, 0x6c, 0x21, 0x49, 0x3d, 0x24, 0xf7, 0xa3, 0x38, 0x55, 0x4a, 0x0a, 0x9b, 0x14, 0xc4, 0x12,
	0x25, 0x06, 0x27, 0x03, 0x2e, 0xe9, 0xcc, 0x7c, 0xbd, 0xf4, 0xa2, 0x82, 0x64, 0xbd, 0xd4, 0x8a,
	0xc4, 0xdc, 0x82, 0x9c, 0xd4, 0x62, 0x24, 0xf5, 0x4e, 0xfc, 0x2e, 0x70, 0x76, 0x00, 0x28, 0x54,
	0x02, 0x18, 0x93, 0xd8, 0xc0, 0xc1, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xd9, 0x03,
	0xce, 0x32, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeployerClient is the client API for Deployer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployerClient interface {
	// Deploys instance
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error)
}

type deployerClient struct {
	cc *grpc.ClientConn
}

func NewDeployerClient(cc *grpc.ClientConn) DeployerClient {
	return &deployerClient{cc}
}

func (c *deployerClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error) {
	out := new(DeployResponse)
	err := c.cc.Invoke(ctx, "/deployment.Deployer/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployerServer is the server API for Deployer service.
type DeployerServer interface {
	// Deploys instance
	Deploy(context.Context, *DeployRequest) (*DeployResponse, error)
}

// UnimplementedDeployerServer can be embedded to have forward compatible implementations.
type UnimplementedDeployerServer struct {
}

func (*UnimplementedDeployerServer) Deploy(ctx context.Context, req *DeployRequest) (*DeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}

func RegisterDeployerServer(s *grpc.Server, srv DeployerServer) {
	s.RegisterService(&_Deployer_serviceDesc, srv)
}

func _Deployer_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployerServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deployment.Deployer/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployerServer).Deploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deployment.Deployer",
	HandlerType: (*DeployerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deploy",
			Handler:    _Deployer_Deploy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployment.proto",
}
